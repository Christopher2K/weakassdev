version: '3'
services:
  apps:
    env_file: ../../.env
    build:
      context: ../../
      dockerfile: ./docker/dev/Dockerfile
    volumes:
      - /usr/src/app/.yarn/cache
      - /usr/src/app/.turbo
      - /usr/src/app/node_modules
      - /usr/src/app/apps/web/node_modules
      - /usr/src/app/apps/web/.turbo
      - /usr/src/app/apps/api/node_modules
      - /usr/src/app/apps/api/.turbo
      - /usr/src/app/libs/shared/node_modules
      - /usr/src/app/libs/shared/.turbo
      - ../../:/usr/src/app
    depends_on:
      - db
    links:
      - 'db:db'
    command: /bin/bash -c 'yarn && yarn dev'

  proxy:
    env_file: ../../.env
    image: caddy:2.6.4-alpine
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  db:
    env_file: ../../.env
    image: postgres:15.3-alpine3.18
    restart: always
    volumes:
      - postgres_data:/var/lib/posgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 120

volumes:
  caddy_data:
  caddy_config:
  postgres_data:
